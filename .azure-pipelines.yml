trigger: ["master"]
pr: ["master"]

jobs:
  - job: test_all_native
    displayName: "Native Tests"
    condition: |
      eq(variables['Build.Reason'], 'PullRequest')
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .ci/install-rust.yml
        parameters:
          rust_version: stable
      - bash: |
          export RUST_BACKTRACE=1
          cargo test --all || exit
        displayName: Run cargo check and test
  - job: test_headless_firefox
    displayName: "Headless Browser Tests (Firefox)"
    condition: |
      eq(variables['Build.Reason'], 'PullRequest')
    steps:
      - template: .ci/install-rust.yml
        parameters:
          rust_version: stable
      - template: .ci/install-wasm-pack.yml
      - template: .ci/wasm-pack-test-headless.yml
        parameters:
          browser_flag: --firefox
  - job: test_headless_chrome
    displayName: "Headless Browser Tests (Chrome)"
    condition: |
      eq(variables['Build.Reason'], 'PullRequest')
    steps:
      - template: .ci/install-rust.yml
        parameters:
          rust_version: stable
      - template: .ci/install-wasm-pack.yml
      - template: .ci/wasm-pack-test-headless.yml
        parameters:
          browser_flag: --chrome
  - job: build_book
    condition: |
      eq(variables['Build.Reason'], 'PullRequest')
    displayName: "Doc - build the book"
    steps:
      - template: .ci/install-mdbook.yml
      - script: (cd guide && mdbook build)
  - job: deploy_book
    displayName: "Doc - deploy the book"
    condition: |
      and(not(eq(variables['Build.Reason'], 'PullRequest')),
          eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - template: .ci/install-mdbook.yml
      - script: (cd guide && mdbook build)
      - template: .ci/deploy-book.yml
